Grammar

    0 $accept: P $end

    1 P: dec Identifier
    2  | body P
    3  | /* empty */

    4 dec: INT
    5    | FLOAT

    6 $@1: /* empty */

    7 body: IF expr THEN $@1 body

    8 $@2: /* empty */

    9 $@3: /* empty */

   10 body: WHILE $@2 expr DO $@3 body
   11     | statement ';'

   12 statement: /* empty */
   13          | Identifier '=' expr

   14 expr: expr '+' term
   15     | expr '-' term
   16     | term

   17 term: term '*' factor
   18     | term '/' factor
   19     | factor

   20 factor: Identifier
   21       | Constant
   22       | '(' expr ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 22
')' (41) 22
'*' (42) 17
'+' (43) 14
'-' (45) 15
'/' (47) 18
';' (59) 11
'=' (61) 13
error (256)
Identifier (258) 1 13 20
Constant (259) 21
INT (260) 4
FLOAT (261) 5
IF (262) 7
THEN (263) 7
WHILE (264) 10
DO (265) 10


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
P (20)
    on left: 1 2 3, on right: 0 2
dec (21)
    on left: 4 5, on right: 1
body (22)
    on left: 7 10 11, on right: 2 7 10
$@1 (23)
    on left: 6, on right: 7
$@2 (24)
    on left: 8, on right: 10
$@3 (25)
    on left: 9, on right: 10
statement (26)
    on left: 12 13, on right: 11
expr (27)
    on left: 14 15 16, on right: 7 10 13 14 15 22
term (28)
    on left: 17 18 19, on right: 14 15 16 17 18
factor (29)
    on left: 20 21 22, on right: 17 18 19


state 0

    0 $accept: . P $end

    Identifier  shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5

    ';'       reduce using rule 12 (statement)
    $default  reduce using rule 3 (P)

    P          go to state 6
    dec        go to state 7
    body       go to state 8
    statement  go to state 9


state 1

   13 statement: Identifier . '=' expr

    '='  shift, and go to state 10


state 2

    4 dec: INT .

    $default  reduce using rule 4 (dec)


state 3

    5 dec: FLOAT .

    $default  reduce using rule 5 (dec)


state 4

    7 body: IF . expr THEN $@1 body

    Identifier  shift, and go to state 11
    Constant    shift, and go to state 12
    '('         shift, and go to state 13

    expr    go to state 14
    term    go to state 15
    factor  go to state 16


state 5

   10 body: WHILE . $@2 expr DO $@3 body

    $default  reduce using rule 8 ($@2)

    $@2  go to state 17


state 6

    0 $accept: P . $end

    $end  shift, and go to state 18


state 7

    1 P: dec . Identifier

    Identifier  shift, and go to state 19


state 8

    2 P: body . P

    Identifier  shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5

    ';'       reduce using rule 12 (statement)
    $default  reduce using rule 3 (P)

    P          go to state 20
    dec        go to state 7
    body       go to state 8
    statement  go to state 9


state 9

   11 body: statement . ';'

    ';'  shift, and go to state 21


state 10

   13 statement: Identifier '=' . expr

    Identifier  shift, and go to state 11
    Constant    shift, and go to state 12
    '('         shift, and go to state 13

    expr    go to state 22
    term    go to state 15
    factor  go to state 16


state 11

   20 factor: Identifier .

    $default  reduce using rule 20 (factor)


state 12

   21 factor: Constant .

    $default  reduce using rule 21 (factor)


state 13

   22 factor: '(' . expr ')'

    Identifier  shift, and go to state 11
    Constant    shift, and go to state 12
    '('         shift, and go to state 13

    expr    go to state 23
    term    go to state 15
    factor  go to state 16


state 14

    7 body: IF expr . THEN $@1 body
   14 expr: expr . '+' term
   15     | expr . '-' term

    THEN  shift, and go to state 24
    '+'   shift, and go to state 25
    '-'   shift, and go to state 26


state 15

   16 expr: term .
   17 term: term . '*' factor
   18     | term . '/' factor

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 16 (expr)


state 16

   19 term: factor .

    $default  reduce using rule 19 (term)


state 17

   10 body: WHILE $@2 . expr DO $@3 body

    Identifier  shift, and go to state 11
    Constant    shift, and go to state 12
    '('         shift, and go to state 13

    expr    go to state 29
    term    go to state 15
    factor  go to state 16


state 18

    0 $accept: P $end .

    $default  accept


state 19

    1 P: dec Identifier .

    $default  reduce using rule 1 (P)


state 20

    2 P: body P .

    $default  reduce using rule 2 (P)


state 21

   11 body: statement ';' .

    $default  reduce using rule 11 (body)


state 22

   13 statement: Identifier '=' expr .
   14 expr: expr . '+' term
   15     | expr . '-' term

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26

    $default  reduce using rule 13 (statement)


state 23

   14 expr: expr . '+' term
   15     | expr . '-' term
   22 factor: '(' expr . ')'

    '+'  shift, and go to state 25
    '-'  shift, and go to state 26
    ')'  shift, and go to state 30


state 24

    7 body: IF expr THEN . $@1 body

    $default  reduce using rule 6 ($@1)

    $@1  go to state 31


state 25

   14 expr: expr '+' . term

    Identifier  shift, and go to state 11
    Constant    shift, and go to state 12
    '('         shift, and go to state 13

    term    go to state 32
    factor  go to state 16


state 26

   15 expr: expr '-' . term

    Identifier  shift, and go to state 11
    Constant    shift, and go to state 12
    '('         shift, and go to state 13

    term    go to state 33
    factor  go to state 16


state 27

   17 term: term '*' . factor

    Identifier  shift, and go to state 11
    Constant    shift, and go to state 12
    '('         shift, and go to state 13

    factor  go to state 34


state 28

   18 term: term '/' . factor

    Identifier  shift, and go to state 11
    Constant    shift, and go to state 12
    '('         shift, and go to state 13

    factor  go to state 35


state 29

   10 body: WHILE $@2 expr . DO $@3 body
   14 expr: expr . '+' term
   15     | expr . '-' term

    DO   shift, and go to state 36
    '+'  shift, and go to state 25
    '-'  shift, and go to state 26


state 30

   22 factor: '(' expr ')' .

    $default  reduce using rule 22 (factor)


state 31

    7 body: IF expr THEN $@1 . body

    Identifier  shift, and go to state 1
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5

    $default  reduce using rule 12 (statement)

    body       go to state 37
    statement  go to state 9


state 32

   14 expr: expr '+' term .
   17 term: term . '*' factor
   18     | term . '/' factor

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 14 (expr)


state 33

   15 expr: expr '-' term .
   17 term: term . '*' factor
   18     | term . '/' factor

    '*'  shift, and go to state 27
    '/'  shift, and go to state 28

    $default  reduce using rule 15 (expr)


state 34

   17 term: term '*' factor .

    $default  reduce using rule 17 (term)


state 35

   18 term: term '/' factor .

    $default  reduce using rule 18 (term)


state 36

   10 body: WHILE $@2 expr DO . $@3 body

    $default  reduce using rule 9 ($@3)

    $@3  go to state 38


state 37

    7 body: IF expr THEN $@1 body .

    $default  reduce using rule 7 (body)


state 38

   10 body: WHILE $@2 expr DO $@3 . body

    Identifier  shift, and go to state 1
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5

    $default  reduce using rule 12 (statement)

    body       go to state 39
    statement  go to state 9


state 39

   10 body: WHILE $@2 expr DO $@3 body .

    $default  reduce using rule 10 (body)
